{"ast":null,"code":"import{fetchAllProducts}from\"../../api/productAPIs\";import{fetchAllCategories}from\"../../api/categoryAPIs\";export var setFilter=function setFilter(category){//Note: used for filtering of products based on selected category\nreturn{type:\"SET_FILTER\",category:category};};export var clearFilter=function clearFilter(){//Note: for clearing filter\nreturn{type:\"CLEAR_FILTER\"};};export var initCatalog=function initCatalog(accessToken){return function(dispatch){//Note: Initialise catalog by fetching all categories and all products\nPromise.all([fetchAllCategories(accessToken),fetchAllProducts(accessToken)]).then(function(json){dispatch({type:\"INIT_CATALOG\",categories:json[0].data,products:json[1].data});}).catch(function(){dispatch({type:\"INIT_CATALOG\",categories:[\"ALL\"],products:[]});});};};export var setSortBy=function setSortBy(sortBy){//Note: used for of products\nreturn{type:\"SET_SORTING\",sortBy:sortBy};};export var clearAllMetadata=function clearAllMetadata(){//Note: for clearing filter\nreturn{type:\"CLEAR_ALL\"};};","map":{"version":3,"names":["fetchAllProducts","fetchAllCategories","setFilter","category","type","clearFilter","initCatalog","accessToken","dispatch","Promise","all","then","json","categories","data","products","catch","setSortBy","sortBy","clearAllMetadata"],"sources":["C:/Users/Home/Documents/UpGrad-Project/upgrad-eshop/frontend/src/store/actions/metadataAction.js"],"sourcesContent":["import {fetchAllProducts} from \"../../api/productAPIs\";\nimport {fetchAllCategories} from \"../../api/categoryAPIs\";\n\nexport const setFilter = (category) => {\n\t//Note: used for filtering of products based on selected category\n\treturn {\n\t\ttype: \"SET_FILTER\",\n\t\tcategory: category,\n\t}\n};\n\nexport const clearFilter = () => {\n\t//Note: for clearing filter\n\treturn {\n\t\ttype: \"CLEAR_FILTER\",\n\t}\n};\n\nexport const initCatalog = (accessToken) => dispatch => {\n\t//Note: Initialise catalog by fetching all categories and all products\n\tPromise.all([fetchAllCategories(accessToken), fetchAllProducts(accessToken)]).then(json => {\n\t\tdispatch({\n\t\t\ttype: \"INIT_CATALOG\",\n\t\t\tcategories: json[0].data,\n\t\t\tproducts: json[1].data,\n\t\t});\n\t}).catch(() => {\n\t\tdispatch({\n\t\t\ttype: \"INIT_CATALOG\",\n\t\t\tcategories: [\"ALL\"],\n\t\t\tproducts: [],\n\t\t});\n\t});\n};\n\nexport const setSortBy = (sortBy) => {\n\t//Note: used for of products\n\treturn {\n\t\ttype: \"SET_SORTING\",\n\t\tsortBy: sortBy,\n\t}\n};\n\nexport const clearAllMetadata = () => {\n\t//Note: for clearing filter\n\treturn {\n\t\ttype: \"CLEAR_ALL\",\n\t}\n};"],"mappings":"AAAA,OAAQA,gBAAgB,KAAO,uBAAuB,CACtD,OAAQC,kBAAkB,KAAO,wBAAwB,CAEzD,MAAO,IAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,QAAQ,CAAK,CACtC;AACA,MAAO,CACNC,IAAI,CAAE,YAAY,CAClBD,QAAQ,CAAEA,QACX,CAAC,CACF,CAAC,CAED,MAAO,IAAM,CAAAE,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CAChC;AACA,MAAO,CACND,IAAI,CAAE,cACP,CAAC,CACF,CAAC,CAED,MAAO,IAAM,CAAAE,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,WAAW,QAAK,UAAAC,QAAQ,CAAI,CACvD;AACAC,OAAO,CAACC,GAAG,CAAC,CAACT,kBAAkB,CAACM,WAAW,CAAC,CAAEP,gBAAgB,CAACO,WAAW,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,SAAAC,IAAI,CAAI,CAC1FJ,QAAQ,CAAC,CACRJ,IAAI,CAAE,cAAc,CACpBS,UAAU,CAAED,IAAI,CAAC,CAAC,CAAC,CAACE,IAAI,CACxBC,QAAQ,CAAEH,IAAI,CAAC,CAAC,CAAC,CAACE,IACnB,CAAC,CAAC,CACH,CAAC,CAAC,CAACE,KAAK,CAAC,UAAM,CACdR,QAAQ,CAAC,CACRJ,IAAI,CAAE,cAAc,CACpBS,UAAU,CAAE,CAAC,KAAK,CAAC,CACnBE,QAAQ,CAAE,EACX,CAAC,CAAC,CACH,CAAC,CAAC,CACH,CAAC,GAED,MAAO,IAAM,CAAAE,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,MAAM,CAAK,CACpC;AACA,MAAO,CACNd,IAAI,CAAE,aAAa,CACnBc,MAAM,CAAEA,MACT,CAAC,CACF,CAAC,CAED,MAAO,IAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CACrC;AACA,MAAO,CACNf,IAAI,CAAE,WACP,CAAC,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}